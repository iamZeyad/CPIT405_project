{"ast":null,"code":"var _jsxFileName = \"/Users/zeyad/CPIT405_project/cpit405_react/src/containers/Form.js\",\n  _s = $RefreshSig$();\nimport './Form.css';\nimport Result from './Result';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const [describtion, setDescribtion] = useState(null);\n  const [script, setScript] = useState(null);\n  const [file, setFile] = useState(null);\n  const [fileSizeError, setFileSizeError] = useState(false);\n  const [fileTypeError, setFiletypeError] = useState(false);\n  useEffect(() => {\n    if (script != null) {\n      storeScript();\n    }\n  }, [script]);\n  useEffect(() => {\n    setScript(null);\n  }, [describtion]);\n  async function storeScript() {\n    const myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    const raw = JSON.stringify({\n      script: script,\n      describtion: describtion\n    });\n    const requestOptions = {\n      method: \"POST\",\n      headers: myHeaders,\n      body: raw,\n      redirect: \"follow\"\n    };\n    await fetch(\"http://localhost:3000/CPIT405_DB/api/create.php\", requestOptions);\n  }\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n\n    // Check if the file size is greater than 8MB\n    if (selectedFile && selectedFile.size > 8 * 1024 * 1024) {\n      setFileSizeError(true);\n      e.target.value = null; // Clear the selected file\n      return;\n    } else {\n      setFileSizeError(false);\n    }\n\n    // Check if the file type is audio\n    const allowedAudioTypes = ['audio/mpeg', 'audio/wav', 'audio/mp3', 'audio/x-wav', 'audio/ogg'];\n    if (!allowedAudioTypes.includes(selectedFile.type)) {\n      setFiletypeError(true);\n      e.target.value = null; // Clear the selected file\n      return;\n    } else {\n      setFiletypeError(false);\n    }\n    setFile(selectedFile);\n  };\n  async function handleSubmit(e) {\n    e.preventDefault();\n    if (!file) {\n      alert('Please select a file.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      // Return a script\n      const response = await fetch('http://localhost:3000/CPIT405_DB/api/upload.php', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      setScript(data.text);\n    } catch (error) {\n      console.error('Error processing the response:', error);\n      // Handle the error or display a message to the user\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"type description\",\n          onChange: e => setDescribtion(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Audio file:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          placeholder: \"enter the audio file\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), fileSizeError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"file-error\",\n          children: \"File size exceeds 8MB. Please choose a smaller file.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this), fileTypeError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"file-error\",\n          children: \"Please select a valid audio file.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), script && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Result, {\n        script: script,\n        describtion: describtion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n_s(Form, \"rH0iPqNOELMCjNLtkWR1xqDojrE=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["Result","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Form","_s","describtion","setDescribtion","script","setScript","file","setFile","fileSizeError","setFileSizeError","fileTypeError","setFiletypeError","storeScript","myHeaders","Headers","append","raw","JSON","stringify","requestOptions","method","headers","body","redirect","fetch","handleFileChange","e","selectedFile","target","files","size","value","allowedAudioTypes","includes","type","handleSubmit","preventDefault","alert","formData","FormData","response","ok","Error","status","data","json","text","error","console","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","className","_c","$RefreshReg$"],"sources":["/Users/zeyad/CPIT405_project/cpit405_react/src/containers/Form.js"],"sourcesContent":["import './Form.css';\nimport Result from './Result';\nimport { useState, useEffect } from 'react';\n\nconst Form = () => {\n    const [describtion, setDescribtion] = useState(null);\n    const [script, setScript] = useState(null);\n    const [file, setFile] = useState(null);\n    const [fileSizeError, setFileSizeError] = useState(false);\n    const [fileTypeError,setFiletypeError] = useState(false);\n\n    useEffect(() => {\n        if (script != null) {\n            storeScript();\n        }\n    }, [script]);\n\n    useEffect(() => {\n        setScript(null);\n    }, [describtion]);\n\n    async function storeScript() {\n        const myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n\n        const raw = JSON.stringify({\n            script: script,\n            describtion: describtion,\n        });\n\n        const requestOptions = {\n            method: \"POST\",\n            headers: myHeaders,\n            body: raw,\n            redirect: \"follow\",\n        };\n\n        await fetch(\"http://localhost:3000/CPIT405_DB/api/create.php\", requestOptions);\n    }\n\n    const handleFileChange = (e) => {\n        const selectedFile = e.target.files[0];\n\n        // Check if the file size is greater than 8MB\n        if (selectedFile && selectedFile.size > 8 * 1024 * 1024) {\n            setFileSizeError(true);\n            e.target.value = null; // Clear the selected file\n            return;\n        } else {\n            setFileSizeError(false);\n        }\n\n        // Check if the file type is audio\n        const allowedAudioTypes = ['audio/mpeg', 'audio/wav', 'audio/mp3', 'audio/x-wav', 'audio/ogg'];\n        if (!allowedAudioTypes.includes(selectedFile.type)) {\n\n            setFiletypeError(true);\n            e.target.value = null; // Clear the selected file\n            return;\n        }else{\n            setFiletypeError(false);\n        }\n\n        setFile(selectedFile);\n    };\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n        if (!file) {\n            alert('Please select a file.');\n            return;\n        }\n    \n        const formData = new FormData();\n        formData.append('file', file);\n    \n        try {\n            // Return a script\n            const response = await fetch('http://localhost:3000/CPIT405_DB/api/upload.php', {\n                method: 'POST',\n                body: formData,\n            });\n    \n            if (!response.ok) {\n                throw new Error(`HTTP error! Status: ${response.status}`);\n            }\n    \n            const data = await response.json();\n            setScript(data.text);\n        } catch (error) {\n            console.error('Error processing the response:', error);\n            // Handle the error or display a message to the user\n        }\n    }\n    \n\n    return (\n        <>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label>Description:</label>\n                    <input\n                        type=\"text\"\n                        placeholder=\"type description\"\n                        onChange={(e) => setDescribtion(e.target.value)}\n                    />\n                </div>\n                <div>\n                    <label>Audio file:</label>\n                    <input\n                        type=\"file\"\n                        placeholder=\"enter the audio file\"\n                        onChange={handleFileChange}\n                    />\n                    {fileSizeError && (\n                        <p className='file-error'>File size exceeds 8MB. Please choose a smaller file.</p>\n                    )}\n                    {fileTypeError && (\n                        <p className='file-error'>Please select a valid audio file.</p>\n                    )}\n                </div>\n\n                <button>Submit</button>\n            </form>\n            {script && (\n                <div>\n                    <Result script={script} describtion={describtion} />\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default Form;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}